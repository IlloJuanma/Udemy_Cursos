:root {
    --primario: #9c27b0;
    --primarioOscuro: #89119d;
    --secundario: #FFCE00;
    --secundarioOscuro: rgb(233, 287, 2);
    --blanco: #FFF;
    --negro: #000;

    --fuentePrincipal: 'Staatliches', cursive;
}

/* Importante! Añadir siempre el código de Paul Irish */
html {
    box-sizing: border-box;
    /* Esto nos permite agregar que 1 rem sea igual a 10px */
    font-size: 62.5%;
}

/* ---------------------------------------------- 

   Recordatorio!! Los media query, importante --> ctrl + mayus + p
   escribimos "user snippets" y elegimos CSS.json y escribimos: 
    "Crea un Media Querie":{
		"prefix": "mq",
		"body": "@media (min-width: $1){\n    $2\n}"
	}
    Asi podremos usar en responsive en tamaños mas pequeño, el estandar es 768px 

    --------------------------------------------- */

*,
*:before,
*:after {
    box-sizing: inherit;
}

/* Globales */

body {
    background-color: var(--primario);
    font-size: 1.6rem;
    line-height: 1.5;

}

p {
    font-size: 1.8rem;
    font-family: Arial, Helvetica, sans-serif;
    color: var(--blanco)
}

a {
    text-decoration: none;
}

img {
    width: 100%;
}

.contenedor {
    max-width: 120rem;
    /* Una forma fácil de centrar el contenido */
    margin: 0 auto;
}

h1,
h2,
h3 {
    text-align: center;
    color: var(--secundario);
    font-family: var(--fuentePrincipal);
}

h1 {
    font-size: 4rem;
}

h2 {
    font-size: 3.2rem;
}

h3 {
    font-size: 2.4rem;
}

/* Header */
.header {
    display: flex;
    justify-content: center;
}

.header__logo {
    margin: 3rem 0;
}

/* Footer */
.footer {
    background-color: var(--primarioOscuro);
    padding: 1rem 0;
    margin-top: 2rem;

}

.footer__texto {
    text-align: center;
    font-family: var(--fuentePrincipal);
    font-size: 2.2rem;

}

/* Navegacion */

.navegacion {
    background-color: var(--primarioOscuro);
    padding: 1rem 0;
    /* Usamos flex para manejar elementos dentro de un contenedor */
    display: flex;
    justify-content: center;
    /* Separar elementos (modelo nuevo) antes: margin right
    gap: 2rem;*/
}

.navegacion__enlace {
    font-family: var(--fuentePrincipal);
    color: var(--blanco);
    font-size: 3rem;
    /* Usamos éste en lugar de gap, porque Safari no soporta el uso de gap aún */
    margin-right: 2rem;

}

.navegacion__enlace:last-of-type {
    margin-right: 0;
}

.navegacion__enlace--activo,
.navegacion__enlace:hover {
    color: var(--secundario);
}

/* Grid */
.grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
}

@media (min-width: 768px) {
    .grid {
        grid-template-columns: repeat(3, 1fr);
    }

}

/* Productos */

.producto {
    background-color: var(--primarioOscuro);
    padding: 1rem;

}

.producto__nombre {
    font-size: 4rem;

}

.producto__precio {
    font-size: 2.8rem;
    color: var(--secundario);

}

.producto__nombre,
.producto__precio {
    font-family: var(--fuentePrincipal);
    margin: 1rem 0;
    text-align: center;
    line-height: 1.2;
}

/* Gráficos */

.grafico {
    min-height: 30rem;
    /* Evita que la imagen se repita, pero eso hace que salga cortada */
    background-repeat: no-repeat;
    /* Rellenamos todo el hueco disponible para la foto, asi no sale cortada */
    background-size: cover;
    grid-column: 1 / 3;
}

.grafico--camisas {
    /* Definimos las columnas y filas que ocuparan los gráficos
       Firefox developmet tools ayuda mucho a ver esas filas y columnas en inspeccionar HTML */
    grid-row: 2 / 3;
    background-image: url(../img/grafico1.jpg);
}

.grafico--node {
    background-image: url(../img/grafico2.jpg);
    grid-row: 8 / 9;
}

@media (min-width: 768px) {
    .grafico--node {
        grid-row: 5 / 6;
        grid-column: 2 / 4;

    }
}

/* Nosotros */
.nosotros {
    display: grid;
    grid-template-rows: repeat(2, auto);

}

@media (min-width: 768px) {
    .nosotros {
        grid-template-columns: repeat(2, 1fr);
        column-gap: 2rem;
    }

}

.nosotros__imagen {
    grid-row: 1 / 2;
    
}

@media (min-width: 768px) {
    .nosotros__imagen {
        grid-column: 2 / 3;
    }

}

/* Bloques */

.bloques {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    /* Separacion de elementos */
    gap: 2rem;

}

@media (min-width: 768px) {
    .bloques {
        grid-template-columns: repeat(4, 1fr);

    }
}

.bloque {
    text-align: center;
}

.bloque__titulo {
    margin: 0;
}

.bloque__imagen {
    
}
/* Pagina del producto */

@media (min-width: 768px){
    .camisa {
        display: grid;
        grid-template-columns: repeat(2,1fr);
        column-gap: 2rem;
    }
}
.formulario {
    display: grid;
    /* Aunque le digo que me cree 2 columnas, al haber 3 elementos css me crea automaticamente
       las columnas necesarias para ese tercer elemento */
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;

}
.formulario__campo {
    /* border-color: var(--primarioOscuro);
    border-width: 1rem;
    border-style: solid; */
    border: 1rem solid var(--primarioOscuro);
    background-color: var(--primario);
    color: var(--blanco);
    font-size: 2rem;
    font-family: Arial, Helvetica, sans-serif;
    padding: 1rem;
    /* Para quitar la flecha de selección */
    /* appearance: none; */
}
.formulario__submit {
    background-color: var(--secundario);
    border: none;
    font-size: 2rem;
    font-family: var(--fuentePrincipal);
    padding: 2rem;
    transition: background-color 1s ease;
    /* Para facilitar el trabajo de usar grid-column, recomendable usar Firefox dev. edition
       podemos ver el numero de las filas y columnas correspondientes, en este caso
       tiene que ir del 1 hacia el 3 */
    grid-column: 1 / 3;
}
/* Siempre que se le da forma a un submit, pierde el toquecito de la mano, con esto
   lo hacemos aparecer de nuevo */
.formulario__submit:hover{
    cursor: pointer;
    background-color: var(--secundarioOscuro);
    
}